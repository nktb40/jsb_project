class ApplicationController < ActionController::Base
  layout :layout_by_resource
  helper_method :current_or_guest_user
  helper_method :guest_user
  helper_method :total_quantity
  
  protect_from_forgery

	
	protected
	
	def layout_by_resource
	  if devise_controller? && resource_name == :admin
	    "empty"
	  else
	    "application"
	  end
	end

  def authorize
  unless current_user.admin?
    flash[:error] = "unauthorized access"
    redirect_to home_path
    false
  end
  end
  
  def after_sign_in_path_for(resource)
   if current_admin
  	admin_path
  	else
  	root_path
  	end
  end
  
  
  def after_sign_out_path_for(resource)
  	if current_admin
  	new_admin_session_path
  	else
  	root_path
  	end
  end

  
  # if user is logged in, return current_user, else return guest_user
  def current_or_guest_user
    if current_user
      if session[:guest_user_id]
        logging_in
        guest_user.destroy
        session[:guest_user_id] = nil
      end
      current_user
    else
      guest_user
    end
  end

  # find guest_user object associated with the current session,
  # creating one as needed
  def guest_user
    User.find(session[:guest_user_id] ||= create_guest_user.id)
  end

  private

  # called (once) when the user logs in, insert any code your application needs
  # to hand off from guest_user to current_user.
  def logging_in
    # For example:
    guest_cart_items = guest_user.cart_items.all
    guest_cart_items.each do |item|
      item.user_id = current_user.id
      item.save
    end
  end

  def create_guest_user
    u = User.create(:email => "guest_#{Time.now.to_i}#{rand(99)}@example.com")
    u.save(:validate => false)
    u
  end
  
   def total_quantity
  	 @user = current_or_guest_user
  	 @items = @user.cart_items.all
  	 @quantity = 0
  	 @items.each do |item|
  	 	@quantity += item.quantity
  	 end	
  	 @quantity
  end  
end
